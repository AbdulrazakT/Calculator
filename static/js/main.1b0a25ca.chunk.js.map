{"version":3,"sources":["containers/App.js","components/Display.js","components/Keypad.js","reportWebVitals.js","index.js"],"names":["App","useState","screen","setScreen","isEmpty","setIsEmpty","getOperands","e","target","value","clearDisplay","alert","evaluate","result","eval","error","className","screen_value","operand","clear","Display","props","Keypad","onClick","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"s/BAKA,SAASA,MAAO,IAAD,UACeC,oDAAS,IADxB,8KACNC,OADM,cACEC,UADF,yBAEiBF,qDAAS,GAF1B,+KAENG,QAFM,cAEGC,WAFH,cAIb,SAASC,YAAYC,GACnBJ,UAAUD,OAASK,EAAEC,OAAOC,OAC5BJ,YAAW,GAGb,SAASK,eACFN,QAIHO,MAAM,sBAHNR,UAAU,IACVE,YAAW,IAMf,SAASO,WACP,IACE,IAAIC,OAASC,KAAKZ,QAClBC,UAAUU,QACVR,YAAW,GACX,MAAOU,OACPJ,MAAMI,OACNL,gBAIJ,OACE,mEAAKM,UAAU,MAAf,UACE,kGACA,mEAAKA,UAAU,aAAf,UACE,2DAAC,mDAAD,CAASC,aAAcf,SACvB,2DAAC,kDAAD,CAAQgB,QAASZ,YAAaa,MAAOT,aAAcG,OAAQD,iBAMpDZ,2B,6BC7Cf,sBAWeoB,IARC,SAACC,GACf,OACE,qBAAKL,UAAU,UAAf,SACE,gCAAQK,EAAMJ,mB,6BCNpB,sBAsEeK,IAnEA,SAACD,GACd,OACE,qBAAKL,UAAU,SAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,wBAAQP,MAAM,IAAIc,QAASF,EAAMH,QAAjC,eAGA,wBAAQT,MAAM,IAAIc,QAASF,EAAMH,QAAjC,eAGA,wBAAQT,MAAM,IAAIc,QAASF,EAAMH,QAAjC,eAGA,wBAAQK,QAASF,EAAMF,MAAvB,gBACA,wBAAQV,MAAM,IAAIc,QAASF,EAAMH,QAAjC,eAGA,wBAAQT,MAAM,IAAIc,QAASF,EAAMH,QAAjC,eAGA,wBAAQT,MAAM,IAAIc,QAASF,EAAMH,QAAjC,eAGA,wBAAQT,MAAM,IAAIc,QAASF,EAAMH,QAAjC,kBAGA,wBAAQT,MAAM,IAAIc,QAASF,EAAMH,QAAjC,eAGA,wBAAQT,MAAM,IAAIc,QAASF,EAAMH,QAAjC,eAGA,wBAAQT,MAAM,IAAIc,QAASF,EAAMH,QAAjC,eAGA,wBAAQT,MAAM,IAAIc,QAASF,EAAMH,QAAjC,eAGA,wBAAQT,MAAM,IAAIc,QAASF,EAAMH,QAAjC,eAGA,wBAAQT,MAAM,IAAIc,QAASF,EAAMH,QAAjC,eAGA,wBAAQT,MAAM,IAAIc,QAASF,EAAMH,QAAjC,eAGA,wBAAQT,MAAM,IAAIc,QAASF,EAAMH,QAAjC,eAGA,wBAAQT,MAAM,IAAIc,QAASF,EAAMH,QAAjC,eAGA,wBAAQT,MAAM,IAAIc,QAASF,EAAMH,QAAjC,eAGA,wBAAQM,GAAG,eAAeD,QAASF,EAAMR,OAAzC,eAGA,wBAAQJ,MAAM,IAAIc,QAASF,EAAMH,QAAjC,sB,oKClDOO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACpC,EAAA,EAAD,MAEFqC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1b0a25ca.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"../containers/App.css\";\nimport Display from \"../components/Display\";\nimport Keypad from \"../components/Keypad\";\n\nfunction App() {\n  const [screen, setScreen] = useState(\"\");\n  const [isEmpty, setIsEmpty] = useState(true);\n\n  function getOperands(e) {\n    setScreen(screen + e.target.value);\n    setIsEmpty(false);\n  }\n\n  function clearDisplay() {\n    if (!isEmpty) {\n      setScreen(\"\");\n      setIsEmpty(true);\n    } else {\n      alert(\"Nothing to clear!\");\n    }\n  }\n\n  function evaluate() {\n    try {\n      let result = eval(screen);\n      setScreen(result);\n      setIsEmpty(false);\n    } catch (error) {\n      alert(error);\n      clearDisplay();\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>React JS Calculator</h1>\n      <div className=\"calculator\">\n        <Display screen_value={screen} />\n        <Keypad operand={getOperands} clear={clearDisplay} result={evaluate} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport \"../components/Display.css\";\r\n\r\nconst Display = (props) => {\r\n  return (\r\n    <div className=\"display\">\r\n      <label>{props.screen_value}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","import React from \"react\";\r\nimport \"../components/Keypad.css\";\r\n\r\nconst Keypad = (props) => {\r\n  return (\r\n    <div className=\"keypad\">\r\n      <div className=\"button-wrapper\">\r\n        <button value=\"(\" onClick={props.operand}>\r\n          (\r\n        </button>\r\n        <button value=\")\" onClick={props.operand}>\r\n          )\r\n        </button>\r\n        <button value=\"%\" onClick={props.operand}>\r\n          %\r\n        </button>\r\n        <button onClick={props.clear}>AC</button>\r\n        <button value=\"7\" onClick={props.operand}>\r\n          7\r\n        </button>\r\n        <button value=\"8\" onClick={props.operand}>\r\n          8\r\n        </button>\r\n        <button value=\"9\" onClick={props.operand}>\r\n          9\r\n        </button>\r\n        <button value=\"/\" onClick={props.operand}>\r\n          รท\r\n        </button>\r\n        <button value=\"4\" onClick={props.operand}>\r\n          4\r\n        </button>\r\n        <button value=\"5\" onClick={props.operand}>\r\n          5\r\n        </button>\r\n        <button value=\"7\" onClick={props.operand}>\r\n          6\r\n        </button>\r\n        <button value=\"*\" onClick={props.operand}>\r\n          x\r\n        </button>\r\n        <button value=\"1\" onClick={props.operand}>\r\n          1\r\n        </button>\r\n        <button value=\"2\" onClick={props.operand}>\r\n          2\r\n        </button>\r\n        <button value=\"3\" onClick={props.operand}>\r\n          3\r\n        </button>\r\n        <button value=\"-\" onClick={props.operand}>\r\n          -\r\n        </button>\r\n        <button value=\"0\" onClick={props.operand}>\r\n          0\r\n        </button>\r\n        <button value=\".\" onClick={props.operand}>\r\n          .\r\n        </button>\r\n        <button id=\"equal-button\" onClick={props.result}>\r\n          =\r\n        </button>\r\n        <button value=\"+\" onClick={props.operand}>\r\n          +\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Keypad;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}